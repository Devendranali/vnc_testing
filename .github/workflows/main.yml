name: Terraform Github Action Pipeline

on:
  push:
    branches:
      - main
      - testing

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

jobs:
  terraform:
    name: "Apply Terraform Code Changes"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: tf_plan
        run: terraform plan -out=tfplan
        continue-on-error: false  # This will fail the job if `terraform plan` fails

      - name: Terraform Apply
        id: terraform_apply
        run: terraform apply -auto-approve tfplan
        continue-on-error: false  # This will fail the job if `terraform apply` fails
      
      
      - name: Create PR to Main if Deploying to testing
        id: terraform_pr_rise
        if: github.ref == 'refs/heads/testing' && steps.terraform_apply.outcome == 'success'
        run: gh pr create --title "Promote testing to main" --body "Merging latest testing infrastructure changes to main." --base main --head testing
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
 
